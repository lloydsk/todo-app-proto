// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: todo/v1/todo.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UserRole represents user access levels
type UserRole int32

const (
	UserRole_USER_ROLE_UNSPECIFIED UserRole = 0
	UserRole_USER_ROLE_USER        UserRole = 1
	UserRole_USER_ROLE_ADMIN       UserRole = 2
)

// Enum value maps for UserRole.
var (
	UserRole_name = map[int32]string{
		0: "USER_ROLE_UNSPECIFIED",
		1: "USER_ROLE_USER",
		2: "USER_ROLE_ADMIN",
	}
	UserRole_value = map[string]int32{
		"USER_ROLE_UNSPECIFIED": 0,
		"USER_ROLE_USER":        1,
		"USER_ROLE_ADMIN":       2,
	}
)

func (x UserRole) Enum() *UserRole {
	p := new(UserRole)
	*p = x
	return p
}

func (x UserRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserRole) Descriptor() protoreflect.EnumDescriptor {
	return file_todo_v1_todo_proto_enumTypes[0].Descriptor()
}

func (UserRole) Type() protoreflect.EnumType {
	return &file_todo_v1_todo_proto_enumTypes[0]
}

func (x UserRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserRole.Descriptor instead.
func (UserRole) EnumDescriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{0}
}

// TaskStatus represents the current state of a task
type TaskStatus int32

const (
	TaskStatus_TASK_STATUS_UNSPECIFIED TaskStatus = 0
	TaskStatus_TASK_STATUS_OPEN        TaskStatus = 1
	TaskStatus_TASK_STATUS_IN_PROGRESS TaskStatus = 2
	TaskStatus_TASK_STATUS_COMPLETED   TaskStatus = 3
	TaskStatus_TASK_STATUS_UNDOABLE    TaskStatus = 4
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "TASK_STATUS_UNSPECIFIED",
		1: "TASK_STATUS_OPEN",
		2: "TASK_STATUS_IN_PROGRESS",
		3: "TASK_STATUS_COMPLETED",
		4: "TASK_STATUS_UNDOABLE",
	}
	TaskStatus_value = map[string]int32{
		"TASK_STATUS_UNSPECIFIED": 0,
		"TASK_STATUS_OPEN":        1,
		"TASK_STATUS_IN_PROGRESS": 2,
		"TASK_STATUS_COMPLETED":   3,
		"TASK_STATUS_UNDOABLE":    4,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_todo_v1_todo_proto_enumTypes[1].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_todo_v1_todo_proto_enumTypes[1]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{1}
}

// TaskPriority represents task importance
type TaskPriority int32

const (
	TaskPriority_TASK_PRIORITY_UNSPECIFIED TaskPriority = 0
	TaskPriority_TASK_PRIORITY_LOW         TaskPriority = 1
	TaskPriority_TASK_PRIORITY_MEDIUM      TaskPriority = 2
	TaskPriority_TASK_PRIORITY_HIGH        TaskPriority = 3
	TaskPriority_TASK_PRIORITY_URGENT      TaskPriority = 4
)

// Enum value maps for TaskPriority.
var (
	TaskPriority_name = map[int32]string{
		0: "TASK_PRIORITY_UNSPECIFIED",
		1: "TASK_PRIORITY_LOW",
		2: "TASK_PRIORITY_MEDIUM",
		3: "TASK_PRIORITY_HIGH",
		4: "TASK_PRIORITY_URGENT",
	}
	TaskPriority_value = map[string]int32{
		"TASK_PRIORITY_UNSPECIFIED": 0,
		"TASK_PRIORITY_LOW":         1,
		"TASK_PRIORITY_MEDIUM":      2,
		"TASK_PRIORITY_HIGH":        3,
		"TASK_PRIORITY_URGENT":      4,
	}
)

func (x TaskPriority) Enum() *TaskPriority {
	p := new(TaskPriority)
	*p = x
	return p
}

func (x TaskPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_todo_v1_todo_proto_enumTypes[2].Descriptor()
}

func (TaskPriority) Type() protoreflect.EnumType {
	return &file_todo_v1_todo_proto_enumTypes[2]
}

func (x TaskPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskPriority.Descriptor instead.
func (TaskPriority) EnumDescriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{2}
}

// ReminderType represents reminder patterns
type ReminderType int32

const (
	ReminderType_REMINDER_TYPE_UNSPECIFIED ReminderType = 0
	ReminderType_REMINDER_TYPE_ONCE        ReminderType = 1
	ReminderType_REMINDER_TYPE_DAILY       ReminderType = 2
	ReminderType_REMINDER_TYPE_WEEKLY      ReminderType = 3
	ReminderType_REMINDER_TYPE_MONTHLY     ReminderType = 4
)

// Enum value maps for ReminderType.
var (
	ReminderType_name = map[int32]string{
		0: "REMINDER_TYPE_UNSPECIFIED",
		1: "REMINDER_TYPE_ONCE",
		2: "REMINDER_TYPE_DAILY",
		3: "REMINDER_TYPE_WEEKLY",
		4: "REMINDER_TYPE_MONTHLY",
	}
	ReminderType_value = map[string]int32{
		"REMINDER_TYPE_UNSPECIFIED": 0,
		"REMINDER_TYPE_ONCE":        1,
		"REMINDER_TYPE_DAILY":       2,
		"REMINDER_TYPE_WEEKLY":      3,
		"REMINDER_TYPE_MONTHLY":     4,
	}
)

func (x ReminderType) Enum() *ReminderType {
	p := new(ReminderType)
	*p = x
	return p
}

func (x ReminderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReminderType) Descriptor() protoreflect.EnumDescriptor {
	return file_todo_v1_todo_proto_enumTypes[3].Descriptor()
}

func (ReminderType) Type() protoreflect.EnumType {
	return &file_todo_v1_todo_proto_enumTypes[3]
}

func (x ReminderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReminderType.Descriptor instead.
func (ReminderType) EnumDescriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{3}
}

type ConflictResolution int32

const (
	ConflictResolution_CONFLICT_RESOLUTION_UNSPECIFIED ConflictResolution = 0
	ConflictResolution_CONFLICT_RESOLUTION_SERVER_WINS ConflictResolution = 1
	ConflictResolution_CONFLICT_RESOLUTION_CLIENT_WINS ConflictResolution = 2
	ConflictResolution_CONFLICT_RESOLUTION_MERGE       ConflictResolution = 3
)

// Enum value maps for ConflictResolution.
var (
	ConflictResolution_name = map[int32]string{
		0: "CONFLICT_RESOLUTION_UNSPECIFIED",
		1: "CONFLICT_RESOLUTION_SERVER_WINS",
		2: "CONFLICT_RESOLUTION_CLIENT_WINS",
		3: "CONFLICT_RESOLUTION_MERGE",
	}
	ConflictResolution_value = map[string]int32{
		"CONFLICT_RESOLUTION_UNSPECIFIED": 0,
		"CONFLICT_RESOLUTION_SERVER_WINS": 1,
		"CONFLICT_RESOLUTION_CLIENT_WINS": 2,
		"CONFLICT_RESOLUTION_MERGE":       3,
	}
)

func (x ConflictResolution) Enum() *ConflictResolution {
	p := new(ConflictResolution)
	*p = x
	return p
}

func (x ConflictResolution) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConflictResolution) Descriptor() protoreflect.EnumDescriptor {
	return file_todo_v1_todo_proto_enumTypes[4].Descriptor()
}

func (ConflictResolution) Type() protoreflect.EnumType {
	return &file_todo_v1_todo_proto_enumTypes[4]
}

func (x ConflictResolution) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConflictResolution.Descriptor instead.
func (ConflictResolution) EnumDescriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{4}
}

// User represents a user in the system
type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Role          UserRole               `protobuf:"varint,4,opt,name=role,proto3,enum=todo.v1.UserRole" json:"role,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Version       int64                  `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"`                      // For optimistic locking and sync
	IsDeleted     bool                   `protobuf:"varint,8,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"` // Soft delete flag
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_todo_v1_todo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetRole() UserRole {
	if x != nil {
		return x.Role
	}
	return UserRole_USER_ROLE_UNSPECIFIED
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *User) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *User) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

// Task represents a todo task
type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	AssigneeId    string                 `protobuf:"bytes,4,opt,name=assignee_id,json=assigneeId,proto3" json:"assignee_id,omitempty"`
	Status        TaskStatus             `protobuf:"varint,5,opt,name=status,proto3,enum=todo.v1.TaskStatus" json:"status,omitempty"`
	Priority      TaskPriority           `protobuf:"varint,6,opt,name=priority,proto3,enum=todo.v1.TaskPriority" json:"priority,omitempty"`
	CategoryIds   []string               `protobuf:"bytes,7,rep,name=category_ids,json=categoryIds,proto3" json:"category_ids,omitempty"`
	TagIds        []string               `protobuf:"bytes,8,rep,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	DueDate       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Version       int64                  `protobuf:"varint,12,opt,name=version,proto3" json:"version,omitempty"`                      // For optimistic locking and sync
	IsDeleted     bool                   `protobuf:"varint,13,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"` // Soft delete flag
	History       []*TaskHistoryEntry    `protobuf:"bytes,14,rep,name=history,proto3" json:"history,omitempty"`
	Reminders     []*TaskReminder        `protobuf:"bytes,15,rep,name=reminders,proto3" json:"reminders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_todo_v1_todo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{1}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Task) GetAssigneeId() string {
	if x != nil {
		return x.AssigneeId
	}
	return ""
}

func (x *Task) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *Task) GetPriority() TaskPriority {
	if x != nil {
		return x.Priority
	}
	return TaskPriority_TASK_PRIORITY_UNSPECIFIED
}

func (x *Task) GetCategoryIds() []string {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

func (x *Task) GetTagIds() []string {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *Task) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Task) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Task) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Task) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Task) GetHistory() []*TaskHistoryEntry {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *Task) GetReminders() []*TaskReminder {
	if x != nil {
		return x.Reminders
	}
	return nil
}

// Category represents a task category
type Category struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Color         string                 `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`                        // Hex color code
	ParentId      string                 `protobuf:"bytes,5,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`  // For hierarchy
	IsPublic      bool                   `protobuf:"varint,6,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"` // Public vs private categories
	CreatorId     string                 `protobuf:"bytes,7,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Version       int64                  `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
	IsDeleted     bool                   `protobuf:"varint,11,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Category) Reset() {
	*x = Category{}
	mi := &file_todo_v1_todo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{2}
}

func (x *Category) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Category) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Category) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Category) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *Category) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *Category) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *Category) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Category) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Category) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Category) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

// Tag represents a task tag
type Tag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Color         string                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"` // Hex color code
	CreatorId     string                 `protobuf:"bytes,4,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Version       int64                  `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"`
	IsDeleted     bool                   `protobuf:"varint,8,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tag) Reset() {
	*x = Tag{}
	mi := &file_todo_v1_todo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{3}
}

func (x *Tag) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tag) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Tag) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *Tag) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Tag) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Tag) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Tag) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

// TaskReminder represents a reminder for a task
type TaskReminder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskId        string                 `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	RemindAt      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=remind_at,json=remindAt,proto3" json:"remind_at,omitempty"`
	Type          ReminderType           `protobuf:"varint,4,opt,name=type,proto3,enum=todo.v1.ReminderType" json:"type,omitempty"`
	IsSent        bool                   `protobuf:"varint,5,opt,name=is_sent,json=isSent,proto3" json:"is_sent,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Version       int64                  `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"`
	IsDeleted     bool                   `protobuf:"varint,8,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskReminder) Reset() {
	*x = TaskReminder{}
	mi := &file_todo_v1_todo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskReminder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskReminder) ProtoMessage() {}

func (x *TaskReminder) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskReminder.ProtoReflect.Descriptor instead.
func (*TaskReminder) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{4}
}

func (x *TaskReminder) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskReminder) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskReminder) GetRemindAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RemindAt
	}
	return nil
}

func (x *TaskReminder) GetType() ReminderType {
	if x != nil {
		return x.Type
	}
	return ReminderType_REMINDER_TYPE_UNSPECIFIED
}

func (x *TaskReminder) GetIsSent() bool {
	if x != nil {
		return x.IsSent
	}
	return false
}

func (x *TaskReminder) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TaskReminder) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *TaskReminder) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

// TaskHistoryEntry represents a single event in task history
type TaskHistoryEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskId        string                 `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Action        string                 `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"` // "created", "completed", "marked_undoable", etc.
	ActorId       string                 `protobuf:"bytes,4,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Details       string                 `protobuf:"bytes,6,opt,name=details,proto3" json:"details,omitempty"` // Optional additional information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskHistoryEntry) Reset() {
	*x = TaskHistoryEntry{}
	mi := &file_todo_v1_todo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskHistoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskHistoryEntry) ProtoMessage() {}

func (x *TaskHistoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskHistoryEntry.ProtoReflect.Descriptor instead.
func (*TaskHistoryEntry) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{5}
}

func (x *TaskHistoryEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskHistoryEntry) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskHistoryEntry) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *TaskHistoryEntry) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *TaskHistoryEntry) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TaskHistoryEntry) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

// Common authentication and pagination messages
type AuthContext struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Role          UserRole               `protobuf:"varint,2,opt,name=role,proto3,enum=todo.v1.UserRole" json:"role,omitempty"`
	Permissions   []string               `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthContext) Reset() {
	*x = AuthContext{}
	mi := &file_todo_v1_todo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthContext) ProtoMessage() {}

func (x *AuthContext) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthContext.ProtoReflect.Descriptor instead.
func (*AuthContext) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{6}
}

func (x *AuthContext) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuthContext) GetRole() UserRole {
	if x != nil {
		return x.Role
	}
	return UserRole_USER_ROLE_UNSPECIFIED
}

func (x *AuthContext) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type PageInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	mi := &file_todo_v1_todo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{7}
}

func (x *PageInfo) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PageInfo) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type PageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NextPageToken string                 `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageResponse) Reset() {
	*x = PageResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageResponse) ProtoMessage() {}

func (x *PageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageResponse.ProtoReflect.Descriptor instead.
func (*PageResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{8}
}

func (x *PageResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *PageResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Admin Service Messages
type ListUsersRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PageInfo       *PageInfo              `protobuf:"bytes,1,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	SearchQuery    string                 `protobuf:"bytes,2,opt,name=search_query,json=searchQuery,proto3" json:"search_query,omitempty"`           // Optional search filter
	IncludeDeleted bool                   `protobuf:"varint,3,opt,name=include_deleted,json=includeDeleted,proto3" json:"include_deleted,omitempty"` // Include soft deleted users
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{9}
}

func (x *ListUsersRequest) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *ListUsersRequest) GetSearchQuery() string {
	if x != nil {
		return x.SearchQuery
	}
	return ""
}

func (x *ListUsersRequest) GetIncludeDeleted() bool {
	if x != nil {
		return x.IncludeDeleted
	}
	return false
}

type ListUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	PageResponse  *PageResponse          `protobuf:"bytes,2,opt,name=page_response,json=pageResponse,proto3" json:"page_response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{10}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ListUsersResponse) GetPageResponse() *PageResponse {
	if x != nil {
		return x.PageResponse
	}
	return nil
}

type GetUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{11}
}

func (x *GetUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{12}
}

func (x *GetUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type CreateTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   *string                `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	AssigneeId    *string                `protobuf:"bytes,3,opt,name=assignee_id,json=assigneeId,proto3,oneof" json:"assignee_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTaskRequest) Reset() {
	*x = CreateTaskRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskRequest) ProtoMessage() {}

func (x *CreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{13}
}

func (x *CreateTaskRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateTaskRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateTaskRequest) GetAssigneeId() string {
	if x != nil && x.AssigneeId != nil {
		return *x.AssigneeId
	}
	return ""
}

type CreateTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTaskResponse) Reset() {
	*x = CreateTaskResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskResponse) ProtoMessage() {}

func (x *CreateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{14}
}

func (x *CreateTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type ListTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssigneeId    string                 `protobuf:"bytes,1,opt,name=assignee_id,json=assigneeId,proto3" json:"assignee_id,omitempty"` // Optional filter by assignee
	Status        TaskStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=todo.v1.TaskStatus" json:"status,omitempty"`  // Optional filter by status
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksRequest) Reset() {
	*x = ListTasksRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksRequest) ProtoMessage() {}

func (x *ListTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksRequest.ProtoReflect.Descriptor instead.
func (*ListTasksRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{15}
}

func (x *ListTasksRequest) GetAssigneeId() string {
	if x != nil {
		return x.AssigneeId
	}
	return ""
}

func (x *ListTasksRequest) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

type ListTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*Task                `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksResponse) Reset() {
	*x = ListTasksResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksResponse) ProtoMessage() {}

func (x *ListTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksResponse.ProtoReflect.Descriptor instead.
func (*ListTasksResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{16}
}

func (x *ListTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type GetTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskRequest) Reset() {
	*x = GetTaskRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskRequest) ProtoMessage() {}

func (x *GetTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskRequest.ProtoReflect.Descriptor instead.
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{17}
}

func (x *GetTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type GetTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskResponse) Reset() {
	*x = GetTaskResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskResponse) ProtoMessage() {}

func (x *GetTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskResponse.ProtoReflect.Descriptor instead.
func (*GetTaskResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{18}
}

func (x *GetTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type UpdateTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	AssigneeId    *string                `protobuf:"bytes,4,opt,name=assignee_id,json=assigneeId,proto3,oneof" json:"assignee_id,omitempty"` // Optional - allows unassigning
	Status        TaskStatus             `protobuf:"varint,5,opt,name=status,proto3,enum=todo.v1.TaskStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskRequest) Reset() {
	*x = UpdateTaskRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskRequest) ProtoMessage() {}

func (x *UpdateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *UpdateTaskRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateTaskRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateTaskRequest) GetAssigneeId() string {
	if x != nil && x.AssigneeId != nil {
		return *x.AssigneeId
	}
	return ""
}

func (x *UpdateTaskRequest) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

type UpdateTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskResponse) Reset() {
	*x = UpdateTaskResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskResponse) ProtoMessage() {}

func (x *UpdateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskResponse.ProtoReflect.Descriptor instead.
func (*UpdateTaskResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type GetTaskHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskHistoryRequest) Reset() {
	*x = GetTaskHistoryRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskHistoryRequest) ProtoMessage() {}

func (x *GetTaskHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetTaskHistoryRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{21}
}

func (x *GetTaskHistoryRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type GetTaskHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	History       []*TaskHistoryEntry    `protobuf:"bytes,1,rep,name=history,proto3" json:"history,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskHistoryResponse) Reset() {
	*x = GetTaskHistoryResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskHistoryResponse) ProtoMessage() {}

func (x *GetTaskHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetTaskHistoryResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{22}
}

func (x *GetTaskHistoryResponse) GetHistory() []*TaskHistoryEntry {
	if x != nil {
		return x.History
	}
	return nil
}

// User Service Messages
// Standardized authentication messages
type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"` // Use email instead of username for consistency
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	DeviceId      string                 `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"` // For session tracking
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{23}
}

func (x *LoginRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   string                 `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`    // JWT token
	RefreshToken  string                 `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // For token renewal
	User          *User                  `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	ExpiresIn     int64                  `protobuf:"varint,4,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"` // Token expiry in seconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{24}
}

func (x *LoginResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *LoginResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *LoginResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LoginResponse) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

type RefreshTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RefreshToken  string                 `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshTokenRequest) Reset() {
	*x = RefreshTokenRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRequest) ProtoMessage() {}

func (x *RefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{25}
}

func (x *RefreshTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type RefreshTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   string                 `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ExpiresIn     int64                  `protobuf:"varint,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshTokenResponse) Reset() {
	*x = RefreshTokenResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenResponse) ProtoMessage() {}

func (x *RefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*RefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{26}
}

func (x *RefreshTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RefreshTokenResponse) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

type GetMyTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMyTasksRequest) Reset() {
	*x = GetMyTasksRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMyTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTasksRequest) ProtoMessage() {}

func (x *GetMyTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTasksRequest.ProtoReflect.Descriptor instead.
func (*GetMyTasksRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{27}
}

func (x *GetMyTasksRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetMyTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*Task                `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMyTasksResponse) Reset() {
	*x = GetMyTasksResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMyTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTasksResponse) ProtoMessage() {}

func (x *GetMyTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTasksResponse.ProtoReflect.Descriptor instead.
func (*GetMyTasksResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{28}
}

func (x *GetMyTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type CompleteTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteTaskRequest) Reset() {
	*x = CompleteTaskRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteTaskRequest) ProtoMessage() {}

func (x *CompleteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteTaskRequest.ProtoReflect.Descriptor instead.
func (*CompleteTaskRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{29}
}

func (x *CompleteTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *CompleteTaskRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CompleteTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteTaskResponse) Reset() {
	*x = CompleteTaskResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteTaskResponse) ProtoMessage() {}

func (x *CompleteTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteTaskResponse.ProtoReflect.Descriptor instead.
func (*CompleteTaskResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{30}
}

func (x *CompleteTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type MarkTaskUndoableRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"` // Optional reason
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkTaskUndoableRequest) Reset() {
	*x = MarkTaskUndoableRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkTaskUndoableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkTaskUndoableRequest) ProtoMessage() {}

func (x *MarkTaskUndoableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkTaskUndoableRequest.ProtoReflect.Descriptor instead.
func (*MarkTaskUndoableRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{31}
}

func (x *MarkTaskUndoableRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *MarkTaskUndoableRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MarkTaskUndoableRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type MarkTaskUndoableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkTaskUndoableResponse) Reset() {
	*x = MarkTaskUndoableResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkTaskUndoableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkTaskUndoableResponse) ProtoMessage() {}

func (x *MarkTaskUndoableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkTaskUndoableResponse.ProtoReflect.Descriptor instead.
func (*MarkTaskUndoableResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{32}
}

func (x *MarkTaskUndoableResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type UpdateTaskProgressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status        TaskStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=todo.v1.TaskStatus" json:"status,omitempty"`
	ProgressNotes string                 `protobuf:"bytes,3,opt,name=progress_notes,json=progressNotes,proto3" json:"progress_notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskProgressRequest) Reset() {
	*x = UpdateTaskProgressRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskProgressRequest) ProtoMessage() {}

func (x *UpdateTaskProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskProgressRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskProgressRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateTaskProgressRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *UpdateTaskProgressRequest) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *UpdateTaskProgressRequest) GetProgressNotes() string {
	if x != nil {
		return x.ProgressNotes
	}
	return ""
}

type UpdateTaskProgressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskProgressResponse) Reset() {
	*x = UpdateTaskProgressResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskProgressResponse) ProtoMessage() {}

func (x *UpdateTaskProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskProgressResponse.ProtoReflect.Descriptor instead.
func (*UpdateTaskProgressResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateTaskProgressResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

// Sync messages for offline support
type SyncTasksRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	LastSyncVersion int64                  `protobuf:"varint,1,opt,name=last_sync_version,json=lastSyncVersion,proto3" json:"last_sync_version,omitempty"`
	LocalChanges    []*TaskUpdate          `protobuf:"bytes,2,rep,name=local_changes,json=localChanges,proto3" json:"local_changes,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SyncTasksRequest) Reset() {
	*x = SyncTasksRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncTasksRequest) ProtoMessage() {}

func (x *SyncTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncTasksRequest.ProtoReflect.Descriptor instead.
func (*SyncTasksRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{35}
}

func (x *SyncTasksRequest) GetLastSyncVersion() int64 {
	if x != nil {
		return x.LastSyncVersion
	}
	return 0
}

func (x *SyncTasksRequest) GetLocalChanges() []*TaskUpdate {
	if x != nil {
		return x.LocalChanges
	}
	return nil
}

type SyncTasksResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UpdatedTasks   []*Task                `protobuf:"bytes,1,rep,name=updated_tasks,json=updatedTasks,proto3" json:"updated_tasks,omitempty"`
	DeletedTaskIds []string               `protobuf:"bytes,2,rep,name=deleted_task_ids,json=deletedTaskIds,proto3" json:"deleted_task_ids,omitempty"`
	ServerVersion  int64                  `protobuf:"varint,3,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	Conflicts      []*TaskConflict        `protobuf:"bytes,4,rep,name=conflicts,proto3" json:"conflicts,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SyncTasksResponse) Reset() {
	*x = SyncTasksResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncTasksResponse) ProtoMessage() {}

func (x *SyncTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncTasksResponse.ProtoReflect.Descriptor instead.
func (*SyncTasksResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{36}
}

func (x *SyncTasksResponse) GetUpdatedTasks() []*Task {
	if x != nil {
		return x.UpdatedTasks
	}
	return nil
}

func (x *SyncTasksResponse) GetDeletedTaskIds() []string {
	if x != nil {
		return x.DeletedTaskIds
	}
	return nil
}

func (x *SyncTasksResponse) GetServerVersion() int64 {
	if x != nil {
		return x.ServerVersion
	}
	return 0
}

func (x *SyncTasksResponse) GetConflicts() []*TaskConflict {
	if x != nil {
		return x.Conflicts
	}
	return nil
}

type TaskUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status        TaskStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=todo.v1.TaskStatus" json:"status,omitempty"`
	ClientVersion int64                  `protobuf:"varint,3,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskUpdate) Reset() {
	*x = TaskUpdate{}
	mi := &file_todo_v1_todo_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskUpdate) ProtoMessage() {}

func (x *TaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskUpdate.ProtoReflect.Descriptor instead.
func (*TaskUpdate) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{37}
}

func (x *TaskUpdate) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskUpdate) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskUpdate) GetClientVersion() int64 {
	if x != nil {
		return x.ClientVersion
	}
	return 0
}

func (x *TaskUpdate) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type TaskConflict struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	TaskId              string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	ServerVersion       *Task                  `protobuf:"bytes,2,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	ClientVersion       *Task                  `protobuf:"bytes,3,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	SuggestedResolution ConflictResolution     `protobuf:"varint,4,opt,name=suggested_resolution,json=suggestedResolution,proto3,enum=todo.v1.ConflictResolution" json:"suggested_resolution,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *TaskConflict) Reset() {
	*x = TaskConflict{}
	mi := &file_todo_v1_todo_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskConflict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskConflict) ProtoMessage() {}

func (x *TaskConflict) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskConflict.ProtoReflect.Descriptor instead.
func (*TaskConflict) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{38}
}

func (x *TaskConflict) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskConflict) GetServerVersion() *Task {
	if x != nil {
		return x.ServerVersion
	}
	return nil
}

func (x *TaskConflict) GetClientVersion() *Task {
	if x != nil {
		return x.ClientVersion
	}
	return nil
}

func (x *TaskConflict) GetSuggestedResolution() ConflictResolution {
	if x != nil {
		return x.SuggestedResolution
	}
	return ConflictResolution_CONFLICT_RESOLUTION_UNSPECIFIED
}

type GetTaskUpdatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SinceVersion  int64                  `protobuf:"varint,1,opt,name=since_version,json=sinceVersion,proto3" json:"since_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskUpdatesRequest) Reset() {
	*x = GetTaskUpdatesRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskUpdatesRequest) ProtoMessage() {}

func (x *GetTaskUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskUpdatesRequest.ProtoReflect.Descriptor instead.
func (*GetTaskUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{39}
}

func (x *GetTaskUpdatesRequest) GetSinceVersion() int64 {
	if x != nil {
		return x.SinceVersion
	}
	return 0
}

type GetTaskUpdatesResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UpdatedTasks   []*Task                `protobuf:"bytes,1,rep,name=updated_tasks,json=updatedTasks,proto3" json:"updated_tasks,omitempty"`
	CurrentVersion int64                  `protobuf:"varint,2,opt,name=current_version,json=currentVersion,proto3" json:"current_version,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetTaskUpdatesResponse) Reset() {
	*x = GetTaskUpdatesResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskUpdatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskUpdatesResponse) ProtoMessage() {}

func (x *GetTaskUpdatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskUpdatesResponse.ProtoReflect.Descriptor instead.
func (*GetTaskUpdatesResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{40}
}

func (x *GetTaskUpdatesResponse) GetUpdatedTasks() []*Task {
	if x != nil {
		return x.UpdatedTasks
	}
	return nil
}

func (x *GetTaskUpdatesResponse) GetCurrentVersion() int64 {
	if x != nil {
		return x.CurrentVersion
	}
	return 0
}

// Category service messages
type CreateCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   *string                `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Color         *string                `protobuf:"bytes,3,opt,name=color,proto3,oneof" json:"color,omitempty"`
	ParentId      *string                `protobuf:"bytes,4,opt,name=parent_id,json=parentId,proto3,oneof" json:"parent_id,omitempty"`
	IsPublic      bool                   `protobuf:"varint,5,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"` // Explicit visibility choice
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCategoryRequest) Reset() {
	*x = CreateCategoryRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCategoryRequest) ProtoMessage() {}

func (x *CreateCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCategoryRequest.ProtoReflect.Descriptor instead.
func (*CreateCategoryRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{41}
}

func (x *CreateCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCategoryRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateCategoryRequest) GetColor() string {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return ""
}

func (x *CreateCategoryRequest) GetParentId() string {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return ""
}

func (x *CreateCategoryRequest) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

type CreateCategoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      *Category              `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCategoryResponse) Reset() {
	*x = CreateCategoryResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCategoryResponse) ProtoMessage() {}

func (x *CreateCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCategoryResponse.ProtoReflect.Descriptor instead.
func (*CreateCategoryResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{42}
}

func (x *CreateCategoryResponse) GetCategory() *Category {
	if x != nil {
		return x.Category
	}
	return nil
}

type ListCategoriesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PageInfo       *PageInfo              `protobuf:"bytes,1,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	IncludeDeleted bool                   `protobuf:"varint,2,opt,name=include_deleted,json=includeDeleted,proto3" json:"include_deleted,omitempty"`
	PublicOnly     bool                   `protobuf:"varint,3,opt,name=public_only,json=publicOnly,proto3" json:"public_only,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListCategoriesRequest) Reset() {
	*x = ListCategoriesRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCategoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCategoriesRequest) ProtoMessage() {}

func (x *ListCategoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCategoriesRequest.ProtoReflect.Descriptor instead.
func (*ListCategoriesRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{43}
}

func (x *ListCategoriesRequest) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *ListCategoriesRequest) GetIncludeDeleted() bool {
	if x != nil {
		return x.IncludeDeleted
	}
	return false
}

func (x *ListCategoriesRequest) GetPublicOnly() bool {
	if x != nil {
		return x.PublicOnly
	}
	return false
}

type ListCategoriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Categories    []*Category            `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	PageResponse  *PageResponse          `protobuf:"bytes,2,opt,name=page_response,json=pageResponse,proto3" json:"page_response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCategoriesResponse) Reset() {
	*x = ListCategoriesResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCategoriesResponse) ProtoMessage() {}

func (x *ListCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCategoriesResponse.ProtoReflect.Descriptor instead.
func (*ListCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{44}
}

func (x *ListCategoriesResponse) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *ListCategoriesResponse) GetPageResponse() *PageResponse {
	if x != nil {
		return x.PageResponse
	}
	return nil
}

type UpdateCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CategoryId    string                 `protobuf:"bytes,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Color         *string                `protobuf:"bytes,4,opt,name=color,proto3,oneof" json:"color,omitempty"`
	ParentId      *string                `protobuf:"bytes,5,opt,name=parent_id,json=parentId,proto3,oneof" json:"parent_id,omitempty"` // Key field - allows "unset" vs "remove parent"
	IsPublic      bool                   `protobuf:"varint,6,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	Version       int64                  `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"` // For optimistic locking
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCategoryRequest) Reset() {
	*x = UpdateCategoryRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCategoryRequest) ProtoMessage() {}

func (x *UpdateCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCategoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateCategoryRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{45}
}

func (x *UpdateCategoryRequest) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *UpdateCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCategoryRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateCategoryRequest) GetColor() string {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return ""
}

func (x *UpdateCategoryRequest) GetParentId() string {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return ""
}

func (x *UpdateCategoryRequest) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *UpdateCategoryRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type UpdateCategoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      *Category              `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCategoryResponse) Reset() {
	*x = UpdateCategoryResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCategoryResponse) ProtoMessage() {}

func (x *UpdateCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCategoryResponse.ProtoReflect.Descriptor instead.
func (*UpdateCategoryResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{46}
}

func (x *UpdateCategoryResponse) GetCategory() *Category {
	if x != nil {
		return x.Category
	}
	return nil
}

type DeleteCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CategoryId    string                 `protobuf:"bytes,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Version       int64                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCategoryRequest) Reset() {
	*x = DeleteCategoryRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCategoryRequest) ProtoMessage() {}

func (x *DeleteCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCategoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteCategoryRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{47}
}

func (x *DeleteCategoryRequest) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *DeleteCategoryRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type DeleteCategoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCategoryResponse) Reset() {
	*x = DeleteCategoryResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCategoryResponse) ProtoMessage() {}

func (x *DeleteCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCategoryResponse.ProtoReflect.Descriptor instead.
func (*DeleteCategoryResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{48}
}

func (x *DeleteCategoryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Tag service messages
type CreateTagRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Color         *string                `protobuf:"bytes,2,opt,name=color,proto3,oneof" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTagRequest) Reset() {
	*x = CreateTagRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagRequest) ProtoMessage() {}

func (x *CreateTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTagRequest.ProtoReflect.Descriptor instead.
func (*CreateTagRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{49}
}

func (x *CreateTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTagRequest) GetColor() string {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return ""
}

type CreateTagResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tag           *Tag                   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTagResponse) Reset() {
	*x = CreateTagResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagResponse) ProtoMessage() {}

func (x *CreateTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTagResponse.ProtoReflect.Descriptor instead.
func (*CreateTagResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{50}
}

func (x *CreateTagResponse) GetTag() *Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type ListTagsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PageInfo       *PageInfo              `protobuf:"bytes,1,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	IncludeDeleted bool                   `protobuf:"varint,2,opt,name=include_deleted,json=includeDeleted,proto3" json:"include_deleted,omitempty"`
	SearchQuery    string                 `protobuf:"bytes,3,opt,name=search_query,json=searchQuery,proto3" json:"search_query,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListTagsRequest) Reset() {
	*x = ListTagsRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagsRequest) ProtoMessage() {}

func (x *ListTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagsRequest.ProtoReflect.Descriptor instead.
func (*ListTagsRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{51}
}

func (x *ListTagsRequest) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *ListTagsRequest) GetIncludeDeleted() bool {
	if x != nil {
		return x.IncludeDeleted
	}
	return false
}

func (x *ListTagsRequest) GetSearchQuery() string {
	if x != nil {
		return x.SearchQuery
	}
	return ""
}

type ListTagsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tags          []*Tag                 `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	PageResponse  *PageResponse          `protobuf:"bytes,2,opt,name=page_response,json=pageResponse,proto3" json:"page_response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTagsResponse) Reset() {
	*x = ListTagsResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagsResponse) ProtoMessage() {}

func (x *ListTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagsResponse.ProtoReflect.Descriptor instead.
func (*ListTagsResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{52}
}

func (x *ListTagsResponse) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ListTagsResponse) GetPageResponse() *PageResponse {
	if x != nil {
		return x.PageResponse
	}
	return nil
}

type UpdateTagRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TagId         string                 `protobuf:"bytes,1,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Color         *string                `protobuf:"bytes,3,opt,name=color,proto3,oneof" json:"color,omitempty"`
	Version       int64                  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTagRequest) Reset() {
	*x = UpdateTagRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagRequest) ProtoMessage() {}

func (x *UpdateTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagRequest.ProtoReflect.Descriptor instead.
func (*UpdateTagRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{53}
}

func (x *UpdateTagRequest) GetTagId() string {
	if x != nil {
		return x.TagId
	}
	return ""
}

func (x *UpdateTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTagRequest) GetColor() string {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return ""
}

func (x *UpdateTagRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type UpdateTagResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tag           *Tag                   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTagResponse) Reset() {
	*x = UpdateTagResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagResponse) ProtoMessage() {}

func (x *UpdateTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagResponse.ProtoReflect.Descriptor instead.
func (*UpdateTagResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{54}
}

func (x *UpdateTagResponse) GetTag() *Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type DeleteTagRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TagId         string                 `protobuf:"bytes,1,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Version       int64                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTagRequest) Reset() {
	*x = DeleteTagRequest{}
	mi := &file_todo_v1_todo_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagRequest) ProtoMessage() {}

func (x *DeleteTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagRequest.ProtoReflect.Descriptor instead.
func (*DeleteTagRequest) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{55}
}

func (x *DeleteTagRequest) GetTagId() string {
	if x != nil {
		return x.TagId
	}
	return ""
}

func (x *DeleteTagRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type DeleteTagResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTagResponse) Reset() {
	*x = DeleteTagResponse{}
	mi := &file_todo_v1_todo_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagResponse) ProtoMessage() {}

func (x *DeleteTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_todo_v1_todo_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagResponse.ProtoReflect.Descriptor instead.
func (*DeleteTagResponse) Descriptor() ([]byte, []int) {
	return file_todo_v1_todo_proto_rawDescGZIP(), []int{56}
}

func (x *DeleteTagResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_todo_v1_todo_proto protoreflect.FileDescriptor

const file_todo_v1_todo_proto_rawDesc = "" +
	"\n" +
	"\x12todo/v1/todo.proto\x12\atodo.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x96\x02\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12%\n" +
	"\x04role\x18\x04 \x01(\x0e2\x11.todo.v1.UserRoleR\x04role\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x18\n" +
	"\aversion\x18\a \x01(\x03R\aversion\x12\x1d\n" +
	"\n" +
	"is_deleted\x18\b \x01(\bR\tisDeleted\"\xdb\x04\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1f\n" +
	"\vassignee_id\x18\x04 \x01(\tR\n" +
	"assigneeId\x12+\n" +
	"\x06status\x18\x05 \x01(\x0e2\x13.todo.v1.TaskStatusR\x06status\x121\n" +
	"\bpriority\x18\x06 \x01(\x0e2\x15.todo.v1.TaskPriorityR\bpriority\x12!\n" +
	"\fcategory_ids\x18\a \x03(\tR\vcategoryIds\x12\x17\n" +
	"\atag_ids\x18\b \x03(\tR\x06tagIds\x125\n" +
	"\bdue_date\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\adueDate\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x18\n" +
	"\aversion\x18\f \x01(\x03R\aversion\x12\x1d\n" +
	"\n" +
	"is_deleted\x18\r \x01(\bR\tisDeleted\x123\n" +
	"\ahistory\x18\x0e \x03(\v2\x19.todo.v1.TaskHistoryEntryR\ahistory\x123\n" +
	"\treminders\x18\x0f \x03(\v2\x15.todo.v1.TaskReminderR\treminders\"\xee\x02\n" +
	"\bCategory\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x14\n" +
	"\x05color\x18\x04 \x01(\tR\x05color\x12\x1b\n" +
	"\tparent_id\x18\x05 \x01(\tR\bparentId\x12\x1b\n" +
	"\tis_public\x18\x06 \x01(\bR\bisPublic\x12\x1d\n" +
	"\n" +
	"creator_id\x18\a \x01(\tR\tcreatorId\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x18\n" +
	"\aversion\x18\n" +
	" \x01(\x03R\aversion\x12\x1d\n" +
	"\n" +
	"is_deleted\x18\v \x01(\bR\tisDeleted\"\x8d\x02\n" +
	"\x03Tag\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05color\x18\x03 \x01(\tR\x05color\x12\x1d\n" +
	"\n" +
	"creator_id\x18\x04 \x01(\tR\tcreatorId\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x18\n" +
	"\aversion\x18\a \x01(\x03R\aversion\x12\x1d\n" +
	"\n" +
	"is_deleted\x18\b \x01(\bR\tisDeleted\"\xa8\x02\n" +
	"\fTaskReminder\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\tR\x06taskId\x127\n" +
	"\tremind_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\bremindAt\x12)\n" +
	"\x04type\x18\x04 \x01(\x0e2\x15.todo.v1.ReminderTypeR\x04type\x12\x17\n" +
	"\ais_sent\x18\x05 \x01(\bR\x06isSent\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x18\n" +
	"\aversion\x18\a \x01(\x03R\aversion\x12\x1d\n" +
	"\n" +
	"is_deleted\x18\b \x01(\bR\tisDeleted\"\xc2\x01\n" +
	"\x10TaskHistoryEntry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\tR\x06taskId\x12\x16\n" +
	"\x06action\x18\x03 \x01(\tR\x06action\x12\x19\n" +
	"\bactor_id\x18\x04 \x01(\tR\aactorId\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x18\n" +
	"\adetails\x18\x06 \x01(\tR\adetails\"o\n" +
	"\vAuthContext\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12%\n" +
	"\x04role\x18\x02 \x01(\x0e2\x11.todo.v1.UserRoleR\x04role\x12 \n" +
	"\vpermissions\x18\x03 \x03(\tR\vpermissions\"F\n" +
	"\bPageInfo\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\"W\n" +
	"\fPageResponse\x12&\n" +
	"\x0fnext_page_token\x18\x01 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\x8e\x01\n" +
	"\x10ListUsersRequest\x12.\n" +
	"\tpage_info\x18\x01 \x01(\v2\x11.todo.v1.PageInfoR\bpageInfo\x12!\n" +
	"\fsearch_query\x18\x02 \x01(\tR\vsearchQuery\x12'\n" +
	"\x0finclude_deleted\x18\x03 \x01(\bR\x0eincludeDeleted\"t\n" +
	"\x11ListUsersResponse\x12#\n" +
	"\x05users\x18\x01 \x03(\v2\r.todo.v1.UserR\x05users\x12:\n" +
	"\rpage_response\x18\x02 \x01(\v2\x15.todo.v1.PageResponseR\fpageResponse\")\n" +
	"\x0eGetUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"4\n" +
	"\x0fGetUserResponse\x12!\n" +
	"\x04user\x18\x01 \x01(\v2\r.todo.v1.UserR\x04user\"\x96\x01\n" +
	"\x11CreateTaskRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12%\n" +
	"\vdescription\x18\x02 \x01(\tH\x00R\vdescription\x88\x01\x01\x12$\n" +
	"\vassignee_id\x18\x03 \x01(\tH\x01R\n" +
	"assigneeId\x88\x01\x01B\x0e\n" +
	"\f_descriptionB\x0e\n" +
	"\f_assignee_id\"7\n" +
	"\x12CreateTaskResponse\x12!\n" +
	"\x04task\x18\x01 \x01(\v2\r.todo.v1.TaskR\x04task\"`\n" +
	"\x10ListTasksRequest\x12\x1f\n" +
	"\vassignee_id\x18\x01 \x01(\tR\n" +
	"assigneeId\x12+\n" +
	"\x06status\x18\x02 \x01(\x0e2\x13.todo.v1.TaskStatusR\x06status\"8\n" +
	"\x11ListTasksResponse\x12#\n" +
	"\x05tasks\x18\x01 \x03(\v2\r.todo.v1.TaskR\x05tasks\")\n" +
	"\x0eGetTaskRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\"4\n" +
	"\x0fGetTaskResponse\x12!\n" +
	"\x04task\x18\x01 \x01(\v2\r.todo.v1.TaskR\x04task\"\xdc\x01\n" +
	"\x11UpdateTaskRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12%\n" +
	"\vdescription\x18\x03 \x01(\tH\x00R\vdescription\x88\x01\x01\x12$\n" +
	"\vassignee_id\x18\x04 \x01(\tH\x01R\n" +
	"assigneeId\x88\x01\x01\x12+\n" +
	"\x06status\x18\x05 \x01(\x0e2\x13.todo.v1.TaskStatusR\x06statusB\x0e\n" +
	"\f_descriptionB\x0e\n" +
	"\f_assignee_id\"7\n" +
	"\x12UpdateTaskResponse\x12!\n" +
	"\x04task\x18\x01 \x01(\v2\r.todo.v1.TaskR\x04task\"0\n" +
	"\x15GetTaskHistoryRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\"M\n" +
	"\x16GetTaskHistoryResponse\x123\n" +
	"\ahistory\x18\x01 \x03(\v2\x19.todo.v1.TaskHistoryEntryR\ahistory\"]\n" +
	"\fLoginRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x1b\n" +
	"\tdevice_id\x18\x03 \x01(\tR\bdeviceId\"\x99\x01\n" +
	"\rLoginResponse\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\x12#\n" +
	"\rrefresh_token\x18\x02 \x01(\tR\frefreshToken\x12!\n" +
	"\x04user\x18\x03 \x01(\v2\r.todo.v1.UserR\x04user\x12\x1d\n" +
	"\n" +
	"expires_in\x18\x04 \x01(\x03R\texpiresIn\":\n" +
	"\x13RefreshTokenRequest\x12#\n" +
	"\rrefresh_token\x18\x01 \x01(\tR\frefreshToken\"X\n" +
	"\x14RefreshTokenResponse\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\x12\x1d\n" +
	"\n" +
	"expires_in\x18\x02 \x01(\x03R\texpiresIn\",\n" +
	"\x11GetMyTasksRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"9\n" +
	"\x12GetMyTasksResponse\x12#\n" +
	"\x05tasks\x18\x01 \x03(\v2\r.todo.v1.TaskR\x05tasks\"G\n" +
	"\x13CompleteTaskRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"9\n" +
	"\x14CompleteTaskResponse\x12!\n" +
	"\x04task\x18\x01 \x01(\v2\r.todo.v1.TaskR\x04task\"c\n" +
	"\x17MarkTaskUndoableRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"=\n" +
	"\x18MarkTaskUndoableResponse\x12!\n" +
	"\x04task\x18\x01 \x01(\v2\r.todo.v1.TaskR\x04task\"\x88\x01\n" +
	"\x19UpdateTaskProgressRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12+\n" +
	"\x06status\x18\x02 \x01(\x0e2\x13.todo.v1.TaskStatusR\x06status\x12%\n" +
	"\x0eprogress_notes\x18\x03 \x01(\tR\rprogressNotes\"?\n" +
	"\x1aUpdateTaskProgressResponse\x12!\n" +
	"\x04task\x18\x01 \x01(\v2\r.todo.v1.TaskR\x04task\"x\n" +
	"\x10SyncTasksRequest\x12*\n" +
	"\x11last_sync_version\x18\x01 \x01(\x03R\x0flastSyncVersion\x128\n" +
	"\rlocal_changes\x18\x02 \x03(\v2\x13.todo.v1.TaskUpdateR\flocalChanges\"\xcd\x01\n" +
	"\x11SyncTasksResponse\x122\n" +
	"\rupdated_tasks\x18\x01 \x03(\v2\r.todo.v1.TaskR\fupdatedTasks\x12(\n" +
	"\x10deleted_task_ids\x18\x02 \x03(\tR\x0edeletedTaskIds\x12%\n" +
	"\x0eserver_version\x18\x03 \x01(\x03R\rserverVersion\x123\n" +
	"\tconflicts\x18\x04 \x03(\v2\x15.todo.v1.TaskConflictR\tconflicts\"\xb4\x01\n" +
	"\n" +
	"TaskUpdate\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12+\n" +
	"\x06status\x18\x02 \x01(\x0e2\x13.todo.v1.TaskStatusR\x06status\x12%\n" +
	"\x0eclient_version\x18\x03 \x01(\x03R\rclientVersion\x129\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xe3\x01\n" +
	"\fTaskConflict\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x124\n" +
	"\x0eserver_version\x18\x02 \x01(\v2\r.todo.v1.TaskR\rserverVersion\x124\n" +
	"\x0eclient_version\x18\x03 \x01(\v2\r.todo.v1.TaskR\rclientVersion\x12N\n" +
	"\x14suggested_resolution\x18\x04 \x01(\x0e2\x1b.todo.v1.ConflictResolutionR\x13suggestedResolution\"<\n" +
	"\x15GetTaskUpdatesRequest\x12#\n" +
	"\rsince_version\x18\x01 \x01(\x03R\fsinceVersion\"u\n" +
	"\x16GetTaskUpdatesResponse\x122\n" +
	"\rupdated_tasks\x18\x01 \x03(\v2\r.todo.v1.TaskR\fupdatedTasks\x12'\n" +
	"\x0fcurrent_version\x18\x02 \x01(\x03R\x0ecurrentVersion\"\xd4\x01\n" +
	"\x15CreateCategoryRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12%\n" +
	"\vdescription\x18\x02 \x01(\tH\x00R\vdescription\x88\x01\x01\x12\x19\n" +
	"\x05color\x18\x03 \x01(\tH\x01R\x05color\x88\x01\x01\x12 \n" +
	"\tparent_id\x18\x04 \x01(\tH\x02R\bparentId\x88\x01\x01\x12\x1b\n" +
	"\tis_public\x18\x05 \x01(\bR\bisPublicB\x0e\n" +
	"\f_descriptionB\b\n" +
	"\x06_colorB\f\n" +
	"\n" +
	"_parent_id\"G\n" +
	"\x16CreateCategoryResponse\x12-\n" +
	"\bcategory\x18\x01 \x01(\v2\x11.todo.v1.CategoryR\bcategory\"\x91\x01\n" +
	"\x15ListCategoriesRequest\x12.\n" +
	"\tpage_info\x18\x01 \x01(\v2\x11.todo.v1.PageInfoR\bpageInfo\x12'\n" +
	"\x0finclude_deleted\x18\x02 \x01(\bR\x0eincludeDeleted\x12\x1f\n" +
	"\vpublic_only\x18\x03 \x01(\bR\n" +
	"publicOnly\"\x87\x01\n" +
	"\x16ListCategoriesResponse\x121\n" +
	"\n" +
	"categories\x18\x01 \x03(\v2\x11.todo.v1.CategoryR\n" +
	"categories\x12:\n" +
	"\rpage_response\x18\x02 \x01(\v2\x15.todo.v1.PageResponseR\fpageResponse\"\x8f\x02\n" +
	"\x15UpdateCategoryRequest\x12\x1f\n" +
	"\vcategory_id\x18\x01 \x01(\tR\n" +
	"categoryId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12%\n" +
	"\vdescription\x18\x03 \x01(\tH\x00R\vdescription\x88\x01\x01\x12\x19\n" +
	"\x05color\x18\x04 \x01(\tH\x01R\x05color\x88\x01\x01\x12 \n" +
	"\tparent_id\x18\x05 \x01(\tH\x02R\bparentId\x88\x01\x01\x12\x1b\n" +
	"\tis_public\x18\x06 \x01(\bR\bisPublic\x12\x18\n" +
	"\aversion\x18\a \x01(\x03R\aversionB\x0e\n" +
	"\f_descriptionB\b\n" +
	"\x06_colorB\f\n" +
	"\n" +
	"_parent_id\"G\n" +
	"\x16UpdateCategoryResponse\x12-\n" +
	"\bcategory\x18\x01 \x01(\v2\x11.todo.v1.CategoryR\bcategory\"R\n" +
	"\x15DeleteCategoryRequest\x12\x1f\n" +
	"\vcategory_id\x18\x01 \x01(\tR\n" +
	"categoryId\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x03R\aversion\"2\n" +
	"\x16DeleteCategoryResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"K\n" +
	"\x10CreateTagRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x19\n" +
	"\x05color\x18\x02 \x01(\tH\x00R\x05color\x88\x01\x01B\b\n" +
	"\x06_color\"3\n" +
	"\x11CreateTagResponse\x12\x1e\n" +
	"\x03tag\x18\x01 \x01(\v2\f.todo.v1.TagR\x03tag\"\x8d\x01\n" +
	"\x0fListTagsRequest\x12.\n" +
	"\tpage_info\x18\x01 \x01(\v2\x11.todo.v1.PageInfoR\bpageInfo\x12'\n" +
	"\x0finclude_deleted\x18\x02 \x01(\bR\x0eincludeDeleted\x12!\n" +
	"\fsearch_query\x18\x03 \x01(\tR\vsearchQuery\"p\n" +
	"\x10ListTagsResponse\x12 \n" +
	"\x04tags\x18\x01 \x03(\v2\f.todo.v1.TagR\x04tags\x12:\n" +
	"\rpage_response\x18\x02 \x01(\v2\x15.todo.v1.PageResponseR\fpageResponse\"|\n" +
	"\x10UpdateTagRequest\x12\x15\n" +
	"\x06tag_id\x18\x01 \x01(\tR\x05tagId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x19\n" +
	"\x05color\x18\x03 \x01(\tH\x00R\x05color\x88\x01\x01\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x03R\aversionB\b\n" +
	"\x06_color\"3\n" +
	"\x11UpdateTagResponse\x12\x1e\n" +
	"\x03tag\x18\x01 \x01(\v2\f.todo.v1.TagR\x03tag\"C\n" +
	"\x10DeleteTagRequest\x12\x15\n" +
	"\x06tag_id\x18\x01 \x01(\tR\x05tagId\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x03R\aversion\"-\n" +
	"\x11DeleteTagResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess*N\n" +
	"\bUserRole\x12\x19\n" +
	"\x15USER_ROLE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eUSER_ROLE_USER\x10\x01\x12\x13\n" +
	"\x0fUSER_ROLE_ADMIN\x10\x02*\x91\x01\n" +
	"\n" +
	"TaskStatus\x12\x1b\n" +
	"\x17TASK_STATUS_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10TASK_STATUS_OPEN\x10\x01\x12\x1b\n" +
	"\x17TASK_STATUS_IN_PROGRESS\x10\x02\x12\x19\n" +
	"\x15TASK_STATUS_COMPLETED\x10\x03\x12\x18\n" +
	"\x14TASK_STATUS_UNDOABLE\x10\x04*\x90\x01\n" +
	"\fTaskPriority\x12\x1d\n" +
	"\x19TASK_PRIORITY_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11TASK_PRIORITY_LOW\x10\x01\x12\x18\n" +
	"\x14TASK_PRIORITY_MEDIUM\x10\x02\x12\x16\n" +
	"\x12TASK_PRIORITY_HIGH\x10\x03\x12\x18\n" +
	"\x14TASK_PRIORITY_URGENT\x10\x04*\x93\x01\n" +
	"\fReminderType\x12\x1d\n" +
	"\x19REMINDER_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12REMINDER_TYPE_ONCE\x10\x01\x12\x17\n" +
	"\x13REMINDER_TYPE_DAILY\x10\x02\x12\x18\n" +
	"\x14REMINDER_TYPE_WEEKLY\x10\x03\x12\x19\n" +
	"\x15REMINDER_TYPE_MONTHLY\x10\x04*\xa2\x01\n" +
	"\x12ConflictResolution\x12#\n" +
	"\x1fCONFLICT_RESOLUTION_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fCONFLICT_RESOLUTION_SERVER_WINS\x10\x01\x12#\n" +
	"\x1fCONFLICT_RESOLUTION_CLIENT_WINS\x10\x02\x12\x1d\n" +
	"\x19CONFLICT_RESOLUTION_MERGE\x10\x032\xf3\x03\n" +
	"\fAdminService\x12B\n" +
	"\tListUsers\x12\x19.todo.v1.ListUsersRequest\x1a\x1a.todo.v1.ListUsersResponse\x12<\n" +
	"\aGetUser\x12\x17.todo.v1.GetUserRequest\x1a\x18.todo.v1.GetUserResponse\x12E\n" +
	"\n" +
	"CreateTask\x12\x1a.todo.v1.CreateTaskRequest\x1a\x1b.todo.v1.CreateTaskResponse\x12B\n" +
	"\tListTasks\x12\x19.todo.v1.ListTasksRequest\x1a\x1a.todo.v1.ListTasksResponse\x12<\n" +
	"\aGetTask\x12\x17.todo.v1.GetTaskRequest\x1a\x18.todo.v1.GetTaskResponse\x12E\n" +
	"\n" +
	"UpdateTask\x12\x1a.todo.v1.UpdateTaskRequest\x1a\x1b.todo.v1.UpdateTaskResponse\x12Q\n" +
	"\x0eGetTaskHistory\x12\x1e.todo.v1.GetTaskHistoryRequest\x1a\x1f.todo.v1.GetTaskHistoryResponse2\xf5\x04\n" +
	"\vUserService\x126\n" +
	"\x05Login\x12\x15.todo.v1.LoginRequest\x1a\x16.todo.v1.LoginResponse\x12K\n" +
	"\fRefreshToken\x12\x1c.todo.v1.RefreshTokenRequest\x1a\x1d.todo.v1.RefreshTokenResponse\x12E\n" +
	"\n" +
	"GetMyTasks\x12\x1a.todo.v1.GetMyTasksRequest\x1a\x1b.todo.v1.GetMyTasksResponse\x12K\n" +
	"\fCompleteTask\x12\x1c.todo.v1.CompleteTaskRequest\x1a\x1d.todo.v1.CompleteTaskResponse\x12W\n" +
	"\x10MarkTaskUndoable\x12 .todo.v1.MarkTaskUndoableRequest\x1a!.todo.v1.MarkTaskUndoableResponse\x12]\n" +
	"\x12UpdateTaskProgress\x12\".todo.v1.UpdateTaskProgressRequest\x1a#.todo.v1.UpdateTaskProgressResponse\x12B\n" +
	"\tSyncTasks\x12\x19.todo.v1.SyncTasksRequest\x1a\x1a.todo.v1.SyncTasksResponse\x12Q\n" +
	"\x0eGetTaskUpdates\x12\x1e.todo.v1.GetTaskUpdatesRequest\x1a\x1f.todo.v1.GetTaskUpdatesResponse2\xdd\x02\n" +
	"\x0fCategoryService\x12Q\n" +
	"\x0eCreateCategory\x12\x1e.todo.v1.CreateCategoryRequest\x1a\x1f.todo.v1.CreateCategoryResponse\x12Q\n" +
	"\x0eListCategories\x12\x1e.todo.v1.ListCategoriesRequest\x1a\x1f.todo.v1.ListCategoriesResponse\x12Q\n" +
	"\x0eUpdateCategory\x12\x1e.todo.v1.UpdateCategoryRequest\x1a\x1f.todo.v1.UpdateCategoryResponse\x12Q\n" +
	"\x0eDeleteCategory\x12\x1e.todo.v1.DeleteCategoryRequest\x1a\x1f.todo.v1.DeleteCategoryResponse2\x99\x02\n" +
	"\n" +
	"TagService\x12B\n" +
	"\tCreateTag\x12\x19.todo.v1.CreateTagRequest\x1a\x1a.todo.v1.CreateTagResponse\x12?\n" +
	"\bListTags\x12\x18.todo.v1.ListTagsRequest\x1a\x19.todo.v1.ListTagsResponse\x12B\n" +
	"\tUpdateTag\x12\x19.todo.v1.UpdateTagRequest\x1a\x1a.todo.v1.UpdateTagResponse\x12B\n" +
	"\tDeleteTag\x12\x19.todo.v1.DeleteTagRequest\x1a\x1a.todo.v1.DeleteTagResponseB2Z0github.com/lloydsk/todo-app-proto/gen/go/todo/v1b\x06proto3"

var (
	file_todo_v1_todo_proto_rawDescOnce sync.Once
	file_todo_v1_todo_proto_rawDescData []byte
)

func file_todo_v1_todo_proto_rawDescGZIP() []byte {
	file_todo_v1_todo_proto_rawDescOnce.Do(func() {
		file_todo_v1_todo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_todo_v1_todo_proto_rawDesc), len(file_todo_v1_todo_proto_rawDesc)))
	})
	return file_todo_v1_todo_proto_rawDescData
}

var file_todo_v1_todo_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_todo_v1_todo_proto_msgTypes = make([]protoimpl.MessageInfo, 57)
var file_todo_v1_todo_proto_goTypes = []any{
	(UserRole)(0),                      // 0: todo.v1.UserRole
	(TaskStatus)(0),                    // 1: todo.v1.TaskStatus
	(TaskPriority)(0),                  // 2: todo.v1.TaskPriority
	(ReminderType)(0),                  // 3: todo.v1.ReminderType
	(ConflictResolution)(0),            // 4: todo.v1.ConflictResolution
	(*User)(nil),                       // 5: todo.v1.User
	(*Task)(nil),                       // 6: todo.v1.Task
	(*Category)(nil),                   // 7: todo.v1.Category
	(*Tag)(nil),                        // 8: todo.v1.Tag
	(*TaskReminder)(nil),               // 9: todo.v1.TaskReminder
	(*TaskHistoryEntry)(nil),           // 10: todo.v1.TaskHistoryEntry
	(*AuthContext)(nil),                // 11: todo.v1.AuthContext
	(*PageInfo)(nil),                   // 12: todo.v1.PageInfo
	(*PageResponse)(nil),               // 13: todo.v1.PageResponse
	(*ListUsersRequest)(nil),           // 14: todo.v1.ListUsersRequest
	(*ListUsersResponse)(nil),          // 15: todo.v1.ListUsersResponse
	(*GetUserRequest)(nil),             // 16: todo.v1.GetUserRequest
	(*GetUserResponse)(nil),            // 17: todo.v1.GetUserResponse
	(*CreateTaskRequest)(nil),          // 18: todo.v1.CreateTaskRequest
	(*CreateTaskResponse)(nil),         // 19: todo.v1.CreateTaskResponse
	(*ListTasksRequest)(nil),           // 20: todo.v1.ListTasksRequest
	(*ListTasksResponse)(nil),          // 21: todo.v1.ListTasksResponse
	(*GetTaskRequest)(nil),             // 22: todo.v1.GetTaskRequest
	(*GetTaskResponse)(nil),            // 23: todo.v1.GetTaskResponse
	(*UpdateTaskRequest)(nil),          // 24: todo.v1.UpdateTaskRequest
	(*UpdateTaskResponse)(nil),         // 25: todo.v1.UpdateTaskResponse
	(*GetTaskHistoryRequest)(nil),      // 26: todo.v1.GetTaskHistoryRequest
	(*GetTaskHistoryResponse)(nil),     // 27: todo.v1.GetTaskHistoryResponse
	(*LoginRequest)(nil),               // 28: todo.v1.LoginRequest
	(*LoginResponse)(nil),              // 29: todo.v1.LoginResponse
	(*RefreshTokenRequest)(nil),        // 30: todo.v1.RefreshTokenRequest
	(*RefreshTokenResponse)(nil),       // 31: todo.v1.RefreshTokenResponse
	(*GetMyTasksRequest)(nil),          // 32: todo.v1.GetMyTasksRequest
	(*GetMyTasksResponse)(nil),         // 33: todo.v1.GetMyTasksResponse
	(*CompleteTaskRequest)(nil),        // 34: todo.v1.CompleteTaskRequest
	(*CompleteTaskResponse)(nil),       // 35: todo.v1.CompleteTaskResponse
	(*MarkTaskUndoableRequest)(nil),    // 36: todo.v1.MarkTaskUndoableRequest
	(*MarkTaskUndoableResponse)(nil),   // 37: todo.v1.MarkTaskUndoableResponse
	(*UpdateTaskProgressRequest)(nil),  // 38: todo.v1.UpdateTaskProgressRequest
	(*UpdateTaskProgressResponse)(nil), // 39: todo.v1.UpdateTaskProgressResponse
	(*SyncTasksRequest)(nil),           // 40: todo.v1.SyncTasksRequest
	(*SyncTasksResponse)(nil),          // 41: todo.v1.SyncTasksResponse
	(*TaskUpdate)(nil),                 // 42: todo.v1.TaskUpdate
	(*TaskConflict)(nil),               // 43: todo.v1.TaskConflict
	(*GetTaskUpdatesRequest)(nil),      // 44: todo.v1.GetTaskUpdatesRequest
	(*GetTaskUpdatesResponse)(nil),     // 45: todo.v1.GetTaskUpdatesResponse
	(*CreateCategoryRequest)(nil),      // 46: todo.v1.CreateCategoryRequest
	(*CreateCategoryResponse)(nil),     // 47: todo.v1.CreateCategoryResponse
	(*ListCategoriesRequest)(nil),      // 48: todo.v1.ListCategoriesRequest
	(*ListCategoriesResponse)(nil),     // 49: todo.v1.ListCategoriesResponse
	(*UpdateCategoryRequest)(nil),      // 50: todo.v1.UpdateCategoryRequest
	(*UpdateCategoryResponse)(nil),     // 51: todo.v1.UpdateCategoryResponse
	(*DeleteCategoryRequest)(nil),      // 52: todo.v1.DeleteCategoryRequest
	(*DeleteCategoryResponse)(nil),     // 53: todo.v1.DeleteCategoryResponse
	(*CreateTagRequest)(nil),           // 54: todo.v1.CreateTagRequest
	(*CreateTagResponse)(nil),          // 55: todo.v1.CreateTagResponse
	(*ListTagsRequest)(nil),            // 56: todo.v1.ListTagsRequest
	(*ListTagsResponse)(nil),           // 57: todo.v1.ListTagsResponse
	(*UpdateTagRequest)(nil),           // 58: todo.v1.UpdateTagRequest
	(*UpdateTagResponse)(nil),          // 59: todo.v1.UpdateTagResponse
	(*DeleteTagRequest)(nil),           // 60: todo.v1.DeleteTagRequest
	(*DeleteTagResponse)(nil),          // 61: todo.v1.DeleteTagResponse
	(*timestamppb.Timestamp)(nil),      // 62: google.protobuf.Timestamp
}
var file_todo_v1_todo_proto_depIdxs = []int32{
	0,  // 0: todo.v1.User.role:type_name -> todo.v1.UserRole
	62, // 1: todo.v1.User.created_at:type_name -> google.protobuf.Timestamp
	62, // 2: todo.v1.User.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 3: todo.v1.Task.status:type_name -> todo.v1.TaskStatus
	2,  // 4: todo.v1.Task.priority:type_name -> todo.v1.TaskPriority
	62, // 5: todo.v1.Task.due_date:type_name -> google.protobuf.Timestamp
	62, // 6: todo.v1.Task.created_at:type_name -> google.protobuf.Timestamp
	62, // 7: todo.v1.Task.updated_at:type_name -> google.protobuf.Timestamp
	10, // 8: todo.v1.Task.history:type_name -> todo.v1.TaskHistoryEntry
	9,  // 9: todo.v1.Task.reminders:type_name -> todo.v1.TaskReminder
	62, // 10: todo.v1.Category.created_at:type_name -> google.protobuf.Timestamp
	62, // 11: todo.v1.Category.updated_at:type_name -> google.protobuf.Timestamp
	62, // 12: todo.v1.Tag.created_at:type_name -> google.protobuf.Timestamp
	62, // 13: todo.v1.Tag.updated_at:type_name -> google.protobuf.Timestamp
	62, // 14: todo.v1.TaskReminder.remind_at:type_name -> google.protobuf.Timestamp
	3,  // 15: todo.v1.TaskReminder.type:type_name -> todo.v1.ReminderType
	62, // 16: todo.v1.TaskReminder.created_at:type_name -> google.protobuf.Timestamp
	62, // 17: todo.v1.TaskHistoryEntry.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 18: todo.v1.AuthContext.role:type_name -> todo.v1.UserRole
	12, // 19: todo.v1.ListUsersRequest.page_info:type_name -> todo.v1.PageInfo
	5,  // 20: todo.v1.ListUsersResponse.users:type_name -> todo.v1.User
	13, // 21: todo.v1.ListUsersResponse.page_response:type_name -> todo.v1.PageResponse
	5,  // 22: todo.v1.GetUserResponse.user:type_name -> todo.v1.User
	6,  // 23: todo.v1.CreateTaskResponse.task:type_name -> todo.v1.Task
	1,  // 24: todo.v1.ListTasksRequest.status:type_name -> todo.v1.TaskStatus
	6,  // 25: todo.v1.ListTasksResponse.tasks:type_name -> todo.v1.Task
	6,  // 26: todo.v1.GetTaskResponse.task:type_name -> todo.v1.Task
	1,  // 27: todo.v1.UpdateTaskRequest.status:type_name -> todo.v1.TaskStatus
	6,  // 28: todo.v1.UpdateTaskResponse.task:type_name -> todo.v1.Task
	10, // 29: todo.v1.GetTaskHistoryResponse.history:type_name -> todo.v1.TaskHistoryEntry
	5,  // 30: todo.v1.LoginResponse.user:type_name -> todo.v1.User
	6,  // 31: todo.v1.GetMyTasksResponse.tasks:type_name -> todo.v1.Task
	6,  // 32: todo.v1.CompleteTaskResponse.task:type_name -> todo.v1.Task
	6,  // 33: todo.v1.MarkTaskUndoableResponse.task:type_name -> todo.v1.Task
	1,  // 34: todo.v1.UpdateTaskProgressRequest.status:type_name -> todo.v1.TaskStatus
	6,  // 35: todo.v1.UpdateTaskProgressResponse.task:type_name -> todo.v1.Task
	42, // 36: todo.v1.SyncTasksRequest.local_changes:type_name -> todo.v1.TaskUpdate
	6,  // 37: todo.v1.SyncTasksResponse.updated_tasks:type_name -> todo.v1.Task
	43, // 38: todo.v1.SyncTasksResponse.conflicts:type_name -> todo.v1.TaskConflict
	1,  // 39: todo.v1.TaskUpdate.status:type_name -> todo.v1.TaskStatus
	62, // 40: todo.v1.TaskUpdate.updated_at:type_name -> google.protobuf.Timestamp
	6,  // 41: todo.v1.TaskConflict.server_version:type_name -> todo.v1.Task
	6,  // 42: todo.v1.TaskConflict.client_version:type_name -> todo.v1.Task
	4,  // 43: todo.v1.TaskConflict.suggested_resolution:type_name -> todo.v1.ConflictResolution
	6,  // 44: todo.v1.GetTaskUpdatesResponse.updated_tasks:type_name -> todo.v1.Task
	7,  // 45: todo.v1.CreateCategoryResponse.category:type_name -> todo.v1.Category
	12, // 46: todo.v1.ListCategoriesRequest.page_info:type_name -> todo.v1.PageInfo
	7,  // 47: todo.v1.ListCategoriesResponse.categories:type_name -> todo.v1.Category
	13, // 48: todo.v1.ListCategoriesResponse.page_response:type_name -> todo.v1.PageResponse
	7,  // 49: todo.v1.UpdateCategoryResponse.category:type_name -> todo.v1.Category
	8,  // 50: todo.v1.CreateTagResponse.tag:type_name -> todo.v1.Tag
	12, // 51: todo.v1.ListTagsRequest.page_info:type_name -> todo.v1.PageInfo
	8,  // 52: todo.v1.ListTagsResponse.tags:type_name -> todo.v1.Tag
	13, // 53: todo.v1.ListTagsResponse.page_response:type_name -> todo.v1.PageResponse
	8,  // 54: todo.v1.UpdateTagResponse.tag:type_name -> todo.v1.Tag
	14, // 55: todo.v1.AdminService.ListUsers:input_type -> todo.v1.ListUsersRequest
	16, // 56: todo.v1.AdminService.GetUser:input_type -> todo.v1.GetUserRequest
	18, // 57: todo.v1.AdminService.CreateTask:input_type -> todo.v1.CreateTaskRequest
	20, // 58: todo.v1.AdminService.ListTasks:input_type -> todo.v1.ListTasksRequest
	22, // 59: todo.v1.AdminService.GetTask:input_type -> todo.v1.GetTaskRequest
	24, // 60: todo.v1.AdminService.UpdateTask:input_type -> todo.v1.UpdateTaskRequest
	26, // 61: todo.v1.AdminService.GetTaskHistory:input_type -> todo.v1.GetTaskHistoryRequest
	28, // 62: todo.v1.UserService.Login:input_type -> todo.v1.LoginRequest
	30, // 63: todo.v1.UserService.RefreshToken:input_type -> todo.v1.RefreshTokenRequest
	32, // 64: todo.v1.UserService.GetMyTasks:input_type -> todo.v1.GetMyTasksRequest
	34, // 65: todo.v1.UserService.CompleteTask:input_type -> todo.v1.CompleteTaskRequest
	36, // 66: todo.v1.UserService.MarkTaskUndoable:input_type -> todo.v1.MarkTaskUndoableRequest
	38, // 67: todo.v1.UserService.UpdateTaskProgress:input_type -> todo.v1.UpdateTaskProgressRequest
	40, // 68: todo.v1.UserService.SyncTasks:input_type -> todo.v1.SyncTasksRequest
	44, // 69: todo.v1.UserService.GetTaskUpdates:input_type -> todo.v1.GetTaskUpdatesRequest
	46, // 70: todo.v1.CategoryService.CreateCategory:input_type -> todo.v1.CreateCategoryRequest
	48, // 71: todo.v1.CategoryService.ListCategories:input_type -> todo.v1.ListCategoriesRequest
	50, // 72: todo.v1.CategoryService.UpdateCategory:input_type -> todo.v1.UpdateCategoryRequest
	52, // 73: todo.v1.CategoryService.DeleteCategory:input_type -> todo.v1.DeleteCategoryRequest
	54, // 74: todo.v1.TagService.CreateTag:input_type -> todo.v1.CreateTagRequest
	56, // 75: todo.v1.TagService.ListTags:input_type -> todo.v1.ListTagsRequest
	58, // 76: todo.v1.TagService.UpdateTag:input_type -> todo.v1.UpdateTagRequest
	60, // 77: todo.v1.TagService.DeleteTag:input_type -> todo.v1.DeleteTagRequest
	15, // 78: todo.v1.AdminService.ListUsers:output_type -> todo.v1.ListUsersResponse
	17, // 79: todo.v1.AdminService.GetUser:output_type -> todo.v1.GetUserResponse
	19, // 80: todo.v1.AdminService.CreateTask:output_type -> todo.v1.CreateTaskResponse
	21, // 81: todo.v1.AdminService.ListTasks:output_type -> todo.v1.ListTasksResponse
	23, // 82: todo.v1.AdminService.GetTask:output_type -> todo.v1.GetTaskResponse
	25, // 83: todo.v1.AdminService.UpdateTask:output_type -> todo.v1.UpdateTaskResponse
	27, // 84: todo.v1.AdminService.GetTaskHistory:output_type -> todo.v1.GetTaskHistoryResponse
	29, // 85: todo.v1.UserService.Login:output_type -> todo.v1.LoginResponse
	31, // 86: todo.v1.UserService.RefreshToken:output_type -> todo.v1.RefreshTokenResponse
	33, // 87: todo.v1.UserService.GetMyTasks:output_type -> todo.v1.GetMyTasksResponse
	35, // 88: todo.v1.UserService.CompleteTask:output_type -> todo.v1.CompleteTaskResponse
	37, // 89: todo.v1.UserService.MarkTaskUndoable:output_type -> todo.v1.MarkTaskUndoableResponse
	39, // 90: todo.v1.UserService.UpdateTaskProgress:output_type -> todo.v1.UpdateTaskProgressResponse
	41, // 91: todo.v1.UserService.SyncTasks:output_type -> todo.v1.SyncTasksResponse
	45, // 92: todo.v1.UserService.GetTaskUpdates:output_type -> todo.v1.GetTaskUpdatesResponse
	47, // 93: todo.v1.CategoryService.CreateCategory:output_type -> todo.v1.CreateCategoryResponse
	49, // 94: todo.v1.CategoryService.ListCategories:output_type -> todo.v1.ListCategoriesResponse
	51, // 95: todo.v1.CategoryService.UpdateCategory:output_type -> todo.v1.UpdateCategoryResponse
	53, // 96: todo.v1.CategoryService.DeleteCategory:output_type -> todo.v1.DeleteCategoryResponse
	55, // 97: todo.v1.TagService.CreateTag:output_type -> todo.v1.CreateTagResponse
	57, // 98: todo.v1.TagService.ListTags:output_type -> todo.v1.ListTagsResponse
	59, // 99: todo.v1.TagService.UpdateTag:output_type -> todo.v1.UpdateTagResponse
	61, // 100: todo.v1.TagService.DeleteTag:output_type -> todo.v1.DeleteTagResponse
	78, // [78:101] is the sub-list for method output_type
	55, // [55:78] is the sub-list for method input_type
	55, // [55:55] is the sub-list for extension type_name
	55, // [55:55] is the sub-list for extension extendee
	0,  // [0:55] is the sub-list for field type_name
}

func init() { file_todo_v1_todo_proto_init() }
func file_todo_v1_todo_proto_init() {
	if File_todo_v1_todo_proto != nil {
		return
	}
	file_todo_v1_todo_proto_msgTypes[13].OneofWrappers = []any{}
	file_todo_v1_todo_proto_msgTypes[19].OneofWrappers = []any{}
	file_todo_v1_todo_proto_msgTypes[41].OneofWrappers = []any{}
	file_todo_v1_todo_proto_msgTypes[45].OneofWrappers = []any{}
	file_todo_v1_todo_proto_msgTypes[49].OneofWrappers = []any{}
	file_todo_v1_todo_proto_msgTypes[53].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_todo_v1_todo_proto_rawDesc), len(file_todo_v1_todo_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   57,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_todo_v1_todo_proto_goTypes,
		DependencyIndexes: file_todo_v1_todo_proto_depIdxs,
		EnumInfos:         file_todo_v1_todo_proto_enumTypes,
		MessageInfos:      file_todo_v1_todo_proto_msgTypes,
	}.Build()
	File_todo_v1_todo_proto = out.File
	file_todo_v1_todo_proto_goTypes = nil
	file_todo_v1_todo_proto_depIdxs = nil
}
